name: Check Cache

on:
  workflow_call:
    inputs:
      os:
        required: true
        type: string
      arch:
        required: false
        type: string
      build-deps-only:
        required: false
        type: boolean
  
jobs:
  check_cache: # determines if there is a cache and outputs variables used in caching process
    name: Check Cache
    runs-on: ${{ inputs.os == 'windows-latest' && 'windows-latest' || inputs.os == 'macos-14' && 'macos-14' || 'ubuntu-latest' }}
    outputs:
      cache-key: ${{ steps.set_outputs.outputs.cache-key }}
      cache-path: ${{ steps.set_outputs.outputs.cache-path }}
      valid-cache: ${{ steps.cache_deps.outputs.cache-hit }}
      os: ${{ inputs.os }}
      arch: ${{ inputs.arch }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          lfs: 'true'
        
      - name: set outputs
        id: set_outputs
        env:
          OS_INPUT: ${{ inputs.os }} # Use an intermediate env var for cleaner multi-line conditions
        run: |
          DEP_FOLDER_NAME=""
          if [ "$OS_INPUT" = "windows-latest" ]; then
            DEP_FOLDER_NAME='/OrcaSlicer_dep'
          elif [ "$OS_INPUT" = "macos-14" ]; then
            DEP_FOLDER_NAME='' # Mac deps seem to be in deps/build directly based on build_deps.yml
          else # Default for ubuntu-20.04, ubuntu-24.04
            DEP_FOLDER_NAME='/destdir'
          fi

          # Use PowerShell for GITHUB_OUTPUT on Windows, bash for others
          OUTPUT_CMD="\$GITHUB_OUTPUT"
          if [ "$RUNNER_OS" = "Windows" ]; then
            OUTPUT_CMD="\$env:GITHUB_OUTPUT"
          fi

          echo "Calculated DEP_FOLDER_NAME: $DEP_FOLDER_NAME"

          echo "cache-key=${{ inputs.os }}-${{ inputs.arch }}-cache-orcaslicer_deps-build-${{ hashFiles('deps/**') }}" >> $OUTPUT_CMD
          echo "cache-path=${{ github.workspace }}/deps/build$DEP_FOLDER_NAME" >> $OUTPUT_CMD
            
      - name: load cache
        id: cache_deps
        uses: actions/cache@v4
        with:
          path: ${{ steps.set_outputs.outputs.cache-path }}
          key: ${{ steps.set_outputs.outputs.cache-key }}
          lookup-only: true
        
  build_deps: # call next step
    name: Build Deps
    needs: [check_cache]
    uses: ./.github/workflows/build_deps.yml
    with:
      cache-key: ${{ needs.check_cache.outputs.cache-key }}
      cache-path: ${{ needs.check_cache.outputs.cache-path }}
      valid-cache: ${{ needs.check_cache.outputs.valid-cache == 'true' }}
      os: ${{ needs.check_cache.outputs.os }} # Pass through from check_cache
      arch: ${{ needs.check_cache.outputs.arch }} # Pass through from check_cache
      build-deps-only: ${{ inputs.build-deps-only }}
    secrets: inherit
